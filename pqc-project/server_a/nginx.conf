# nginx.conf for Server A (Standard TLS)

worker_processes 1;

# Run in foreground for easier debugging and management.
daemon off;
# Nginx requires a path for its process ID file.
pid pids/nginx_a.pid;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # --- Traffic Management Zone ---
    # Defines a zone 'perip' to track clients by their IP address.
    # 10m = 10 megabytes, enough to store state for many thousands of IPs.
    # rate=10r/s = Allow an average of 10 requests per second per IP.
    limit_req_zone $binary_remote_addr zone=perip:10m rate=10r/s;

    server {
        listen 0.0.0.0:8443 ssl;
        server_name localhost;

        # --- Traffic Management Rule ---
        # Applies the 'perip' zone. Allows bursting 20 requests beyond the rate.
        # 'nodelay' ensures initial requests are processed instantly.
        limit_req zone=perip burst=20 nodelay;

        # --- Standard TLS Configuration ---
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-GCM-SHA384';

        # NOTE: These paths are relative. Start nginx from the 'pqc-project' root directory.
        ssl_certificate     server_a/server_a.crt;
        ssl_certificate_key server_a/server_a.key;

        location / {
            # Proxy to the backend Flask app for Server A
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
